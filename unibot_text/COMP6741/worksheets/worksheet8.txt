
for Text Engineering (GATE), https://gate.ac.uk/. The “hello world” type example application for GATE is
is Tokenization, splitting an input stream of characters into individual tokens. See how it works either with
understand how to access the sentences in a document object after processing at https://spacy.io/usage/
Task 7. Similar to GATE, spaCy includes a pre-trained model for Named Entity Recognition (NER). ProcessÏ
https://spacy.io/usage/spacy-101#annotations
Task 6. Moving on the syntactic analysis of a sentence, spaCy has a dependency parser built into theÏ
https://explosion.ai/demos/matcher
doesn’t show you overlapping matches, you’d have to work with these in Python code.
COMP474/6741 Intelligent Systems (Winter 2022)
the people involved and for a person, look at the “Extracted quotes from” and “Extracted quotes about”.
(EMM) system, which analyses thousands of news sources in over 70 languages and extracts information
features and run it using the online interface at https://explosion.ai/demos/matcher. Note: the online demo
http://services.gate.ac.uk/annie/
ANNIE, a Nearly-New Information Extraction System, which detects a number of so-called Named Entities
document and see how to access the POS tags from token.pos at https://spacy.io/usage/linguistic-features#
default pipeline. Try it on some text at https://spacy.io/usage/linguistic-features#dependency-parse and
Task 1. Text Mining systems are about extracting interesting (and possibly actionable) knowledge fromÏ
https://spacy.io/usage/linguistic-features#named-entities
https://spacy.io/usage/linguistic-features#pos-tagging
(NEs) in a text: Try it out with the online demo at http://services.gate.ac.uk/annie/.
Worksheet #8: NLP & Text Mining
https://spacy.io/usage/linguistic-features#dependency-parse
elemental but crucial step in text processing. Look at the alternative methods available in spaCy and
pos-tagging. Look at the definitions for some of these tags using the references mentioned in the lecture.
about events, people involved, and what they said: https://emm.newsbrief.eu/ Find a “top story”, look at
https://explosion.ai/demos/displacy-ent
understand how the dependencies model the syntactic structure of a sentence.
Task 3. In this course, we will work with the spaCy NLP library for Python. The first step in an NLP pipelineÏ
linguistic-features#sbd.
like “Concordia University” or “University of Waterloo”. Write a few rules that mix different linguistic
Task 2. A major framework for developing text mining applications is the open source General ArchitectureÏ
unstructured, natural language documents. To see an example in action, test out the Europe Media Monitor
some text and see what entities it recognizes at https://spacy.io/usage/linguistic-features#named-entities.
https://gate.ac.uk/
your own installation of spaCy or the online code demo at https://spacy.io/usage/spacy-101#annotations.
features, like tokens and their POS tags. Write rules that detect entities of type University in a document,
You can also see an online visualization using displayCy at https://explosion.ai/demos/displacy-ent.
https://emm.newsbrief.eu/
https://spacy.io/usage/linguistic-features#sbd
Task 8. Now let’s add the recognition of some new entities using rules that run over different linguisticÏ
Task 4. Sentence splitting (a.k.a. sentence segmentation or sentence boundary detection) is anotherÏ
Task 5. Assigning part-of-speech (POS) tags to each token is another essential step in NLP. Process aÏ
