
(Hint: there is no single correct answer, but you can define a sensible range.)
h = σ(A) = σ(X ·W Tih + bih) (2)
1See https://medium.com/from-the-scratch/deep-learning-deep-guide-for-all-your-matrix-dimensions-and-calculations-415012de1568
the result is a matrix of size (1 × 5), A = [ ]
X =
2. Now to compute the result for h, the sigmoid function σ(x) = 1
0.2 0.3 0.2
X = [0.2, 0.3, 0.2, 0.4, 0.1, 0.3, 0.1, 0.9, 0.5]
bias. Rather than listing every weight as on the previous worksheet, we now use matrix notation:1
Pooling Layer. What will be the output of the pooling layer with a size of 2 × 2 and a stride of 1, on the
2. Max pooling:
COMP6721 Worksheet: Introduction to Deep Learning Winter 2022
result (eq. 1):
What will be the size of the activation map?
What will be the activation map?
Your job is to use X to train an autoencoder. So, the input to our network is going to be X. But what is
CNN Activation Map. Assume the following matrix that represents an image. This image will be fed to
is applied to the pre-activation
O = σ(Who · hT + bho) (3)
https://medium.com/from-the-scratch/deep-learning-deep-guide-for-all-your-matrix-dimensions-and-calculations-415012de1568
biases) are initialized to 0.5. Note, our input vector corresponding to the image above is
activation map of the question above, if we use the following strategies:
a convolutional neural network (CNN).
1+e−x
where O is a matrix of size (1 × 9), O = [ ]
3. To compute the output O, the result of the hidden layer (eq. 2) should be multiplied with the weights
the expected output (labels)?
0.1 0.9 0.5
0.4 0.1 0.3
A = X ·W Tih + bih (1)
where h is a matrix of size (1 × 5), h = [ ]
COMP 6721 Applied Artificial Intelligence (Winter 2022)
Define the size of the input layer: and output layer: of your autoencoder.
1. Average pooling:
for a review of matrix calculations for neural networks
Autoencoder. Assume that the 3 × 3 matrix below represents a gray scale image:
activation function is sigmoid and the hidden layer has a size of 5. Perform a single forward pass through
the autoencoder. You can assume an input value of 1 for the biases, and all the weights (including the
Assume that we use the following convolution filter with a stride of 2 (no padding):
1. First, compute the pre-activation function (the net), by multiplying the input and weights, plus the
Worksheet #6: Introduction to Deep Learning
of the output layer, Who, then we apply sigmoid again:
Autoencoder Activation. Assume that we use an autoencoder with the following hyperparameters: the
How many hidden neurons would you use? (Assuming we use a single hidden layer):
